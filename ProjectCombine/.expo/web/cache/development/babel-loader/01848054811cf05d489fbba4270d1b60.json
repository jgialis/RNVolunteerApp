{"ast":null,"code":"var _jsxFileName = \"/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/navigation/DrawerNavigator.tsx\",\n    _this = this;\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport * as React from \"react\";\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport HelpScreen from \"../Screens/HelpScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nvar Drawer = createDrawerNavigator();\nexport default function DrawerNavigator() {\n  return React.createElement(Drawer.Navigator, {\n    drawerContentOptions: {\n      activeTintColor: \"red\",\n      labelStyle: {\n        fontFamily: \"Verdana\",\n        color: \"#ff6623\"\n      }\n    },\n    drawerStyle: {\n      backgroundColor: \"#fbc956\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeNavigator,\n    options: iconContainer.homeIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileNavigator,\n    options: iconContainer.profileIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notification\",\n    component: NotificationNavigator,\n    options: iconContainer.notificationIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Event\",\n    component: EventNavigator,\n    options: iconContainer.eventIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Help\",\n    component: HelpNavigator,\n    options: iconContainer.helpIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Logout\",\n    component: LogoutNavigator,\n    options: iconContainer.logoutIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }\n  }));\n}\nvar iconContainer = {\n  homeIcon: {\n    drawerIcon: function drawerIcon(_ref) {\n      var focused = _ref.focused,\n          size = _ref.size;\n      return React.createElement(Ionicons, {\n        name: \"md-home\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  profileIcon: {\n    drawerIcon: function drawerIcon(_ref2) {\n      var focused = _ref2.focused,\n          size = _ref2.size;\n      return React.createElement(Ionicons, {\n        name: \"person-sharp\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  notificationIcon: {\n    drawerIcon: function drawerIcon(_ref3) {\n      var focused = _ref3.focused,\n          size = _ref3.size;\n      return React.createElement(Ionicons, {\n        name: \"notifications\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  eventIcon: {\n    drawerIcon: function drawerIcon(_ref4) {\n      var focused = _ref4.focused,\n          size = _ref4.size;\n      return React.createElement(Ionicons, {\n        name: \"calendar\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  helpIcon: {\n    drawerIcon: function drawerIcon(_ref5) {\n      var focused = _ref5.focused,\n          size = _ref5.size;\n      return React.createElement(Ionicons, {\n        name: \"help-circle\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  logoutIcon: {\n    drawerIcon: function drawerIcon(_ref6) {\n      var focused = _ref6.focused,\n          size = _ref6.size;\n      return React.createElement(Ionicons, {\n        name: \"log-out\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 7\n        }\n      });\n    }\n  }\n};\nvar HomeStack = createStackNavigator();\n\nfunction HomeNavigator(props) {\n  var _this2 = this;\n\n  console.log(firebase.auth().currentUser);\n  return React.createElement(HomeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Home\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction ProfileNavigator(props) {\n  var _this3 = this;\n\n  return React.createElement(ProfileStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Profile\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar NotificationStack = createStackNavigator();\n\nfunction NotificationNavigator(props) {\n  var _this4 = this;\n\n  return React.createElement(NotificationStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 5\n    }\n  }, React.createElement(NotificationStack.Screen, {\n    name: \"NotificationScreen\",\n    component: NotificationScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Notifications\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar EventStack = createStackNavigator();\n\nfunction EventNavigator(props) {\n  var _this5 = this;\n\n  return React.createElement(EventStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 5\n    }\n  }, React.createElement(EventStack.Screen, {\n    name: \"EventScreen\",\n    component: EventScreen,\n    options: {\n      headerTitle: \"Event\",\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar HelpStack = createStackNavigator();\n\nfunction HelpNavigator(props) {\n  var _this6 = this;\n\n  return React.createElement(HelpStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 5\n    }\n  }, React.createElement(HelpStack.Screen, {\n    name: \"HelpScreen\",\n    component: HelpScreen,\n    options: {\n      headerTitle: \"Help\",\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 298,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 299,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar LogoutStack = createStackNavigator();\n\nfunction LogoutNavigator(props) {\n  firebase.auth().signOut();\n  return React.createElement(LogoutStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 5\n    }\n  }, React.createElement(LogoutStack.Screen, {\n    name: \"LogoutScreen\",\n    component: LogoutScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 327,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/navigation/DrawerNavigator.tsx"],"names":["createStackNavigator","createDrawerNavigator","React","HomeScreen","ProfileScreen","NotificationScreen","EventScreen","HelpScreen","LogoutScreen","Ionicons","firebase","require","Drawer","DrawerNavigator","activeTintColor","labelStyle","fontFamily","color","backgroundColor","HomeNavigator","iconContainer","homeIcon","ProfileNavigator","profileIcon","NotificationNavigator","notificationIcon","EventNavigator","eventIcon","HelpNavigator","helpIcon","LogoutNavigator","logoutIcon","drawerIcon","focused","size","HomeStack","props","console","log","auth","currentUser","headerTintColor","headerStyle","headerTitle","headerLeft","navigation","toggleDrawer","flex","width","Dimensions","get","height","marginLeft","resizeMode","headerTitleStyle","textAlign","ProfileStack","NotificationStack","EventStack","HelpStack","LogoutStack","signOut","headerShown"],"mappings":"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","sourcesContent":["import { createStackNavigator, HeaderTitle } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\n\nimport * as React from \"react\";\n\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport HelpScreen from \"../Screens/HelpScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\n\nimport {\n  DrawerParamList,\n  EventParamList,\n  HelpParamList,\n  HomeParamList,\n  LogoutParamList,\n  NotificationParamList,\n  ProfileParamList,\n} from \"../types\";\nimport { View, Image, TouchableOpacity, Dimensions } from \"react-native\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nconst Drawer = createDrawerNavigator<DrawerParamList>();\n// const Drawer = createDrawerNavigator();\n\nexport default function DrawerNavigator() {\n  return (\n    <Drawer.Navigator\n      drawerContentOptions={{\n        activeTintColor: \"red\",\n        labelStyle: { fontFamily: \"Verdana\", color: \"#ff6623\" },\n      }}\n      drawerStyle={{ backgroundColor: \"#fbc956\" }}\n    >\n      <Drawer.Screen\n        name=\"Home\"\n        component={HomeNavigator}\n        options={iconContainer.homeIcon}\n      />\n      <Drawer.Screen\n        name=\"Profile\"\n        component={ProfileNavigator}\n        options={iconContainer.profileIcon}\n      />\n      <Drawer.Screen\n        name=\"Notification\"\n        component={NotificationNavigator}\n        options={iconContainer.notificationIcon}\n      />\n      <Drawer.Screen\n        name=\"Event\"\n        component={EventNavigator}\n        options={iconContainer.eventIcon}\n      />\n      <Drawer.Screen\n        name=\"Help\"\n        component={HelpNavigator}\n        options={iconContainer.helpIcon}\n      />\n      <Drawer.Screen\n        name=\"Logout\"\n        component={LogoutNavigator}\n        options={iconContainer.logoutIcon}\n      />\n    </Drawer.Navigator>\n  );\n}\n\nconst iconContainer = {\n  homeIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons name=\"md-home\" size={size} color={focused ? \"red\" : \"tomato\"} />\n    ),\n  },\n  profileIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons\n        name=\"person-sharp\"\n        size={size}\n        color={focused ? \"red\" : \"tomato\"}\n      />\n    ),\n  },\n  notificationIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons\n        name=\"notifications\"\n        size={size}\n        color={focused ? \"red\" : \"tomato\"}\n      />\n    ),\n  },\n  eventIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons\n        name=\"calendar\"\n        size={size}\n        color={focused ? \"red\" : \"tomato\"}\n      />\n    ),\n  },\n  helpIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons\n        name=\"help-circle\"\n        size={size}\n        color={focused ? \"red\" : \"tomato\"}\n      />\n    ),\n  },\n  logoutIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons name=\"log-out\" size={size} color={focused ? \"red\" : \"tomato\"} />\n    ),\n  },\n};\n\nconst HomeStack = createStackNavigator<HomeParamList>();\nfunction HomeNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  console.log(firebase.auth().currentUser);\n  return (\n    <HomeStack.Navigator>\n      <HomeStack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerTitle: \"Home\",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n            // fontSize: 25,\n          },\n        }}\n      />\n    </HomeStack.Navigator>\n  );\n}\n\nconst ProfileStack = createStackNavigator<ProfileParamList>();\nfunction ProfileNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <ProfileStack.Navigator>\n      <ProfileStack.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerTitle: \"Profile\",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")}\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </ProfileStack.Navigator>\n  );\n}\n\nconst NotificationStack = createStackNavigator<NotificationParamList>();\nfunction NotificationNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <NotificationStack.Navigator>\n      <NotificationStack.Screen\n        name=\"NotificationScreen\"\n        component={NotificationScreen}\n        options={{\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerTitle: \"Notifications\",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </NotificationStack.Navigator>\n  );\n}\n\nconst EventStack = createStackNavigator<EventParamList>();\nfunction EventNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <EventStack.Navigator>\n      <EventStack.Screen\n        name=\"EventScreen\"\n        component={EventScreen}\n        options={{\n          headerTitle: \"Event\",\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </EventStack.Navigator>\n  );\n}\n\nconst HelpStack = createStackNavigator<HelpParamList>();\nfunction HelpNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <HelpStack.Navigator>\n      <HelpStack.Screen\n        name=\"HelpScreen\"\n        component={HelpScreen}\n        options={{\n          headerTitle: \"Help\",\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </HelpStack.Navigator>\n  );\n}\nconst LogoutStack = createStackNavigator<LogoutParamList>();\nfunction LogoutNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  firebase.auth().signOut();\n  return (\n    <LogoutStack.Navigator>\n      <LogoutStack.Screen\n        name=\"LogoutScreen\"\n        component={LogoutScreen}\n        options={{ headerShown: false }}\n      />\n    </LogoutStack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}