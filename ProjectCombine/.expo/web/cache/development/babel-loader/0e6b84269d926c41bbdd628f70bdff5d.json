{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"C:\\\\Users\\\\eivan\\\\Desktop\\\\Spring 2021\\\\SE\\\\CSE120\\\\ProjectCombine\\\\App.js\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React, { Component } from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport { NavigationContainer } from \"@react-navigation/native\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport MainScreen from \"./Components/main.js\";\nimport Register from \"./Screens/Register.js\";\nimport LandingScreen from \"./Screens/Landing.js\";\nimport Login from \"./Screens/Login.js\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport rootReducer from \"./redux/reducer\";\nimport thunk from \"redux-thunk\";\nimport * as firebase from \"firebase\";\nimport DrawerNavigator from \"./navigation/DrawerNavigator\";\nimport NotFoundScreen from \"./Screens/NotFoundScreen\";\nvar store = createStore(rootReducer, applyMiddleware(thunk));\nvar firebaseConfig = {\n  apiKey: \"AIzaSyDja8e25c5qWuocnY2rS94o0PL4av7sbmY\",\n  authDomain: \"instagram-demo-da68b.firebaseapp.com\",\n  projectId: \"instagram-demo-da68b\",\n  storageBucket: \"instagram-demo-da68b.appspot.com\",\n  messagingSenderId: \"199629117787\",\n  appId: \"1:199629117787:web:e2b7ca0cff099ca117e27e\",\n  measurementId: \"G-WKQ071G99T\"\n};\n\nif (firebase.apps.length === 0) {\n  firebase.initializeApp(firebaseConfig);\n}\n\nvar Stack = createStackNavigator();\nexport var App = function (_Component) {\n  _inherits(App, _Component);\n\n  var _super = _createSuper(App);\n\n  function App(props) {\n    var _this;\n\n    _classCallCheck(this, App);\n\n    _this = _super.call(this, props);\n    _this.state = {\n      loaded: false\n    };\n    return _this;\n  }\n\n  _createClass(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      firebase.auth().onAuthStateChanged(function (user) {\n        console.log(user);\n\n        if (!user) {\n          _this2.setState({\n            loggedIn: false,\n            loaded: true\n          });\n        } else {\n          _this2.setState({\n            loggedIn: true,\n            loaded: true\n          });\n        }\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          loggedIn = _this$state.loggedIn,\n          loaded = _this$state.loaded;\n\n      if (!loaded) {\n        return React.createElement(View, {\n          style: {\n            flex: 1,\n            alignItems: \"center\",\n            justifyContent: \"center\"\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 9\n          }\n        }, React.createElement(Text, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }\n        }, \"Loading...\"));\n      }\n\n      if (!loggedIn) {\n        return React.createElement(NavigationContainer, {\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 9\n          }\n        }, React.createElement(Stack.Navigator, {\n          initialRouteName: \"Landing\",\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 11\n          }\n        }, React.createElement(Stack.Screen, {\n          name: \"Landing\",\n          component: LandingScreen,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Register\",\n          component: Register,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }\n        }), React.createElement(Stack.Screen, {\n          name: \"Login\",\n          component: Login,\n          options: {\n            headerShown: false\n          },\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }\n        })));\n      }\n\n      return React.createElement(Provider, {\n        store: store,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 7\n        }\n      }, React.createElement(NavigationContainer, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 9\n        }\n      }, React.createElement(Stack.Navigator, {\n        initialRouteName: \"root\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }\n      }, React.createElement(Stack.Screen, {\n        name: \"Root\",\n        component: DrawerNavigator,\n        options: {\n          headerShown: false\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 13\n        }\n      }))));\n    }\n  }]);\n\n  return App;\n}(Component);\nexport default App;","map":{"version":3,"sources":["C:/Users/eivan/Desktop/Spring 2021/SE/CSE120/ProjectCombine/App.js"],"names":["React","Component","NavigationContainer","createStackNavigator","MainScreen","Register","LandingScreen","Login","Provider","createStore","applyMiddleware","rootReducer","thunk","firebase","DrawerNavigator","NotFoundScreen","store","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","apps","length","initializeApp","Stack","App","props","state","loaded","auth","onAuthStateChanged","user","console","log","setState","loggedIn","flex","alignItems","justifyContent","headerShown"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport { View, Text } from \"react-native\";\r\n\r\nimport { NavigationContainer } from \"@react-navigation/native\";\r\nimport { createStackNavigator } from \"@react-navigation/stack\";\r\n\r\nimport MainScreen from \"./Components/main.js\";\r\nimport Register from \"./Screens/Register.js\";\r\nimport LandingScreen from \"./Screens/Landing.js\";\r\nimport Login from \"./Screens/Login.js\";\r\n\r\nimport { Provider } from \"react-redux\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport rootReducer from \"./redux/reducer\";\r\nimport thunk from \"redux-thunk\";\r\nimport * as firebase from \"firebase\";\r\n\r\nimport DrawerNavigator from './navigation/DrawerNavigator';\r\nimport NotFoundScreen from './Screens/NotFoundScreen';\r\n\r\nconst store = createStore(rootReducer, applyMiddleware(thunk));\r\nconst firebaseConfig = {\r\n  apiKey: \"AIzaSyDja8e25c5qWuocnY2rS94o0PL4av7sbmY\",\r\n  authDomain: \"instagram-demo-da68b.firebaseapp.com\",\r\n  projectId: \"instagram-demo-da68b\",\r\n  storageBucket: \"instagram-demo-da68b.appspot.com\",\r\n  messagingSenderId: \"199629117787\",\r\n  appId: \"1:199629117787:web:e2b7ca0cff099ca117e27e\",\r\n  measurementId: \"G-WKQ071G99T\",\r\n};\r\n\r\nif (firebase.apps.length === 0) {\r\n  firebase.initializeApp(firebaseConfig);\r\n}\r\nconst Stack = createStackNavigator();\r\n\r\nexport class App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loaded: false,\r\n    };\r\n  }\r\n\r\n  componentDidMount() {\r\n    //Called whenever the components actually mounts and will render next.\r\n    firebase.auth().onAuthStateChanged((user) => {\r\n      console.log(user)\r\n      if (!user) {\r\n        //user hasnt loaded and isnt logged in.\r\n        this.setState({\r\n          loggedIn: false,\r\n          loaded: true,\r\n        });\r\n      } else {\r\n        this.setState({\r\n          loggedIn: true,\r\n          loaded: true,\r\n        });\r\n      }\r\n    });\r\n  }\r\n\r\n  render() {\r\n    const { loggedIn, loaded } = this.state;\r\n    if (!loaded) {\r\n      return (\r\n        <View\r\n          style={{ flex: 1, alignItems: \"center\", justifyContent: \"center\" }}\r\n        >\r\n          <Text>Loading...</Text>\r\n        </View>\r\n      );\r\n    }\r\n\r\n    if (!loggedIn) {\r\n      return (\r\n        <NavigationContainer>\r\n          <Stack.Navigator initialRouteName=\"Landing\">\r\n            <Stack.Screen\r\n              name=\"Landing\"\r\n              component={LandingScreen}\r\n              options={{ headerShown: false }}\r\n            ></Stack.Screen>\r\n            <Stack.Screen\r\n              name=\"Register\"\r\n              component={Register}\r\n              options={{ headerShown: false }}\r\n            ></Stack.Screen>\r\n            <Stack.Screen\r\n              name=\"Login\"\r\n              component={Login}\r\n              options={{ headerShown: false }}\r\n            ></Stack.Screen>\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      );\r\n    } \r\n\r\n    return ( // if user is already logined in then load home page\r\n      <Provider store={store}>\r\n        <NavigationContainer>\r\n          <Stack.Navigator initialRouteName=\"root\">\r\n            <Stack.Screen \r\n              name=\"Root\" \r\n              component={DrawerNavigator}\r\n              options={{ headerShown: false }} \r\n            />\r\n          </Stack.Navigator>\r\n        </NavigationContainer>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}