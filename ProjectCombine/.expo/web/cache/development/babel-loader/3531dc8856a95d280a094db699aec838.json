{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\nvar _jsxFileName = \"/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/Screens/NotificationScreen.tsx\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { getNotification } from \"/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/api/NotificationsAPI.js\";\nimport OrangeBanner from \"../Components/OrangeBanner\";\nimport moment from \"moment\";\nvar windowWidth = Dimensions.get(\"window\").width;\n\nvar NotificationScreen = function (_React$Component) {\n  _inherits(NotificationScreen, _React$Component);\n\n  var _super = _createSuper(NotificationScreen);\n\n  function NotificationScreen() {\n    var _this;\n\n    _classCallCheck(this, NotificationScreen);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n    _this.state = {\n      notificationList: [],\n      currentNotification: null,\n      backgroundColorNotification: \"rgba(0,0,200,0.05)\",\n      pressed: false\n    };\n\n    _this.renderSeparator = function () {\n      return React.createElement(SafeAreaView, {\n        style: {\n          backgroundColor: \"dodgerblue\",\n          height: 1\n        },\n        __self: _assertThisInitialized(_this),\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 5\n        }\n      });\n    };\n\n    _this.onNotificationReceived = function (notificationList) {\n      _this.setState(function (prevState) {\n        return {\n          notificationList: prevState.notificationList = notificationList\n        };\n      });\n    };\n\n    return _this;\n  }\n\n  _createClass(NotificationScreen, [{\n    key: \"changeColor\",\n    value: function changeColor() {\n      if (!this.state.pressed) {\n        this.setState({\n          pressed: true,\n          backgroundColorNotification: \"rgba(0,0,200,0.2)\"\n        });\n      } else {\n        this.setState({\n          pressed: false,\n          backgroundColorNotification: \"rgba(0,0,200,0.05)\"\n        });\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      getNotification(this.onNotificationReceived);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ImageBackground, {\n        source: require(\"../assets/background2.png\"),\n        style: styles.background,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 7\n        }\n      }, React.createElement(OrangeBanner, {\n        title: \"Activity\",\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 9\n        }\n      }), React.createElement(FlatList, {\n        data: this.state.notificationList,\n        ItemSeparatorComponent: this.renderSeparator,\n        ListFooterComponent: this.renderSeparator,\n        keyExtractor: function keyExtractor(item, index) {\n          return index.toString();\n        },\n        renderItem: function renderItem(_ref) {\n          var item = _ref.item;\n          console.log(item);\n          return React.createElement(SafeAreaView, {\n            style: styles.notificationContainer,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }\n          }, React.createElement(TouchableOpacity, {\n            onPress: function onPress() {\n              return _this2.changeColor();\n            },\n            style: {\n              backgroundColor: _this2.state.backgroundColorNotification\n            },\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 17\n            }\n          }, React.createElement(Text, {\n            style: styles.messageContainer,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }\n          }, \"You've signed up for \", item.name, \".\"), React.createElement(Text, {\n            style: styles.timeContainer,\n            __self: _this2,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }\n          }, moment(item.time).fromNow())));\n        },\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 9\n        }\n      }));\n    }\n  }]);\n\n  return NotificationScreen;\n}(React.Component);\n\nexport { NotificationScreen as default };\nvar styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    alignItems: \"center\"\n  },\n  notificationContainer: {\n    borderWidth: 0,\n    borderColor: \"dodgerblue\"\n  },\n  messageContainer: {\n    fontSize: 17,\n    marginTop: 10,\n    marginLeft: 120,\n    color: \"#2468f6\",\n    fontWeight: \"600\"\n  },\n  timeContainer: {\n    fontSize: 17,\n    marginLeft: 120,\n    marginTop: 20,\n    color: \"#75a9f9\",\n    marginBottom: 10\n  }\n});","map":{"version":3,"sources":["/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/Screens/NotificationScreen.tsx"],"names":["React","FlatList","TouchableOpacity","getNotification","OrangeBanner","moment","windowWidth","Dimensions","get","width","NotificationScreen","state","notificationList","currentNotification","backgroundColorNotification","pressed","renderSeparator","backgroundColor","height","onNotificationReceived","setState","prevState","require","styles","background","item","index","toString","console","log","notificationContainer","changeColor","messageContainer","name","timeContainer","time","fromNow","Component","StyleSheet","create","flex","alignItems","borderWidth","borderColor","fontSize","marginTop","marginLeft","color","fontWeight","marginBottom"],"mappings":"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","sourcesContent":["import firebase from \"/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/fb.js\";\nimport React from \"react\";\nimport {\n  StyleSheet,\n  ImageBackground,\n  Text,\n  SafeAreaView,\n  Dimensions,\n} from \"react-native\";\nimport { FlatList, TouchableOpacity } from \"react-native-gesture-handler\";\nimport { Divider } from \"react-native-elements\";\nimport { getNotification } from \"/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/api/NotificationsAPI.js\";\nimport OrangeBanner from \"../Components/OrangeBanner\";\nimport moment from \"moment\";\n\nconst windowWidth = Dimensions.get(\"window\").width;\n\nexport default class NotificationScreen extends React.Component {\n  state = {\n    notificationList: [],\n    currentNotification: null,\n    backgroundColorNotification: \"rgba(0,0,200,0.05)\",\n    pressed: false,\n  };\n\n  // onNotificationAdded = (notification) => {\n  //   // console.log(\"Notification added!\");\n  //   // console.log(notification);\n  //   this.setState((prevState) => ({\n  //     notificationList: [...prevState.notificationList, notification],\n  //   }));\n  // };\n\n  changeColor() {\n    if (!this.state.pressed) {\n      this.setState({\n        pressed: true,\n        backgroundColorNotification: \"rgba(0,0,200,0.2)\",\n      });\n    } else {\n      this.setState({\n        pressed: false,\n        backgroundColorNotification: \"rgba(0,0,200,0.05)\",\n      });\n    }\n  }\n\n  renderSeparator = () => (\n    <SafeAreaView\n      style={{\n        backgroundColor: \"dodgerblue\",\n        height: 1,\n      }}\n    />\n  );\n\n  onNotificationReceived = (notificationList) => {\n    this.setState((prevState) => ({\n      notificationList: (prevState.notificationList = notificationList),\n    }));\n  };\n\n  componentDidMount() {\n    getNotification(this.onNotificationReceived);\n  }\n\n  render() {\n    return (\n      <ImageBackground\n        source={require(\"../assets/background2.png\")}\n        style={styles.background}\n      >\n        <OrangeBanner title=\"Activity\" />\n        <FlatList\n          data={this.state.notificationList}\n          ItemSeparatorComponent={this.renderSeparator}\n          ListFooterComponent={this.renderSeparator}\n          keyExtractor={(item, index) => index.toString()}\n          renderItem={({ item }) => {\n            console.log(item);\n            return (\n              <SafeAreaView style={styles.notificationContainer}>\n                <TouchableOpacity\n                  onPress={() => this.changeColor()}\n                  style={{\n                    backgroundColor: this.state.backgroundColorNotification,\n                  }}\n                >\n                  <Text style={styles.messageContainer}>\n                    You've signed up for {item.name}.\n                  </Text>\n                  <Text style={styles.timeContainer}>\n                    {moment(item.time).fromNow()}\n                  </Text>\n                </TouchableOpacity>\n              </SafeAreaView>\n            );\n          }}\n        />\n      </ImageBackground>\n    );\n  }\n}\n\nconst styles = StyleSheet.create({\n  background: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  notificationContainer: { borderWidth: 0, borderColor: \"dodgerblue\" },\n  messageContainer: {\n    fontSize: 17,\n    marginTop: 10,\n    marginLeft: 120,\n    color: \"#2468f6\",\n    fontWeight: \"600\",\n  },\n  timeContainer: {\n    fontSize: 17,\n    marginLeft: 120,\n    marginTop: 20,\n    color: \"#75a9f9\",\n    marginBottom: 10,\n  },\n});\n\n/*\n\n\n\n// import React, { useState, useEffect } from \"react\";\n// import {\n//   StyleSheet,\n//   ImageBackground,\n//   FlatList,\n//   SafeAreaView,\n//   Text,\n//   Dimensions,\n// } from \"react-native\";\n// import { Divider } from \"react-native-elements\";\n// import OrangeBanner from \"../Components/OrangeBanner\";\n\n// import moment from \"moment\";\n\n// const windowWidth = Dimensions.get(\"window\").width;\n\n// // const notificationsCollection = firebase\n// //   .firestore()\n// //   .collection(\"notifications\")\n// //   .doc(\"v6wBmuPpaIuEx0ODlarQ\")\n// //   .get();\n\n// const notifications = [\n//   {\n//     id: \"1\",\n//     name: \"YOU been added to event!\",\n//     time: +new Date(),\n//   },\n//   {\n//     id: \"2\",\n//     name: \"You've been added to event!\",\n//     time: moment(+new Date()).fromNow(),\n//   },\n// ];\n\n// // async function LoadData(_callback) {\n// //   //console.log(\"Before Load:\");\n// //   var db = firebase.firestore().collection(\"events\");\n// //   await db.get().then((querySnapshot) => {\n// //     // console.log(\"Event Size:\", querySnapshot.size);\n\n// //     querySnapshot.forEach((documentSnapshot) => {\n// //       //console.log(\"Event ID:\",documentSnapshot.id, documentSnapshot.data());\n// //       data = documentSnapshot.data();\n\n// //       // console.log(\"Event Name:\", data['name']);\n// //       // console.log(\"Event Desc:\", data['desc']);\n// //       // console.log(\"Got Data:\");\n// //     });\n// //   });\n// //   //name = data['name'];\n// //   // console.log(\"After Load:\", name);\n// //   _callback();\n// // }\n\n// function Item({ name, time }) {\n//   return (\n//     <SafeAreaView style={styles.listItem}>\n//       <Text>\n//         {name} {time}\n//       </Text>\n//     </SafeAreaView>\n//   );\n// }\n\n// export default class NotificationScreen extends React.Component {\n//   state = {\n//     currentState: \"blue\",\n//   };\n\n//   updateState = () => this.setState({ currentState: \"red\" });\n\n//   render() {\n//     return (\n//       <ImageBackground\n//         source={require(\"../assets/background2.png\")}\n//         style={styles.background}\n//       >\n//         <OrangeBanner title=\"Activity\" />\n//         <Text\n//           onPress={this.updateState}\n//           style={{ color: this.state.currentState }}\n//         >\n//           Press to turn red\n//         </Text>\n//       </ImageBackground>\n//     );\n//   }\n// }\n\n// const styles = StyleSheet.create({\n//   background: {\n//     flex: 1,\n//     alignItems: \"center\",\n//   },\n//   listItem: { width: windowWidth },\n// });\n\n// (\n//   <ImageBackground\n//     source={require(\"../assets/background2.png\")}\n//     style={styles.background}\n//   >\n//     <OrangeBanner title=\"Activity\" />\n//     <FlatList\n//       ItemSeparatorComponent={() => (\n//         <Divider\n//           style={{\n//             borderColor: \"dodgerblue\",\n//             borderWidth: 1,\n//           }}\n//         ></Divider>\n//       )}\n//       data={notifications}\n//       renderItem={({ item }) => <Item name={item.name} time={item.time} />}\n//     />\n//   </ImageBackground>\n// );\n\n\n*/\n"]},"metadata":{},"sourceType":"module"}