{"ast":null,"code":"var _jsxFileName = \"/home/sun/CSE/CSE120/Project/ProjectCombine/navigation/DrawerNavigator.tsx\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport * as React from 'react';\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport HelpScreen from \"../Screens/HelpScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nvar Drawer = createDrawerNavigator();\nexport default function DrawerNavigator() {\n  return React.createElement(Drawer.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notification\",\n    component: NotificationNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Event\",\n    component: EventNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Help\",\n    component: HelpNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Logout\",\n    component: LogoutNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }\n  }));\n}\nvar HomeStack = createStackNavigator();\n\nfunction HomeNavigator(props) {\n  var _this = this;\n\n  return React.createElement(HomeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    options: {\n      headerTitle: 'Home',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/images/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction ProfileNavigator(props) {\n  var _this2 = this;\n\n  return React.createElement(ProfileStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      headerTitle: 'Profile',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/images/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 102,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar NotificationStack = createStackNavigator();\n\nfunction NotificationNavigator(props) {\n  var _this3 = this;\n\n  return React.createElement(NotificationStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 5\n    }\n  }, React.createElement(NotificationStack.Screen, {\n    name: \"NotificationScreen\",\n    component: NotificationScreen,\n    options: {\n      headerTitle: 'Notification',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/images/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar EventStack = createStackNavigator();\n\nfunction EventNavigator(props) {\n  var _this4 = this;\n\n  return React.createElement(EventStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 5\n    }\n  }, React.createElement(EventStack.Screen, {\n    name: \"EventScreen\",\n    component: EventScreen,\n    options: {\n      headerTitle: 'Event',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 170,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/images/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar HelpStack = createStackNavigator();\n\nfunction HelpNavigator(props) {\n  var _this5 = this;\n\n  return React.createElement(HelpStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 5\n    }\n  }, React.createElement(HelpStack.Screen, {\n    name: \"HelpScreen\",\n    component: HelpScreen,\n    options: {\n      headerTitle: 'Help',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/images/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar LogoutStack = createStackNavigator();\n\nfunction LogoutNavigator(props) {\n  var _this6 = this;\n\n  return React.createElement(LogoutStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 232,\n      columnNumber: 5\n    }\n  }, React.createElement(LogoutStack.Screen, {\n    name: \"LogoutScreen\",\n    component: LogoutScreen,\n    options: {\n      headerTitle: 'Logout',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/images/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 233,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/home/sun/CSE/CSE120/Project/ProjectCombine/navigation/DrawerNavigator.tsx"],"names":["createStackNavigator","createDrawerNavigator","React","HomeScreen","ProfileScreen","NotificationScreen","EventScreen","HelpScreen","LogoutScreen","Drawer","DrawerNavigator","HomeNavigator","ProfileNavigator","NotificationNavigator","EventNavigator","HelpNavigator","LogoutNavigator","HomeStack","props","headerTitle","headerLeft","navigation","toggleDrawer","require","flex","width","Dimensions","get","height","marginLeft","resizeMode","headerTitleStyle","textAlign","ProfileStack","NotificationStack","EventStack","HelpStack","LogoutStack"],"mappings":"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","sourcesContent":["import { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport { useNavigation, NavigationContainer, DrawerActions } from '@react-navigation/native';\nimport * as React from 'react';\n\nimport HomeScreen from '../Screens/HomeScreen';\nimport ProfileScreen from '../Screens/ProfileScreen';\nimport NotificationScreen from '../Screens/NotificationScreen';\nimport EventScreen from '../Screens/EventScreen';\nimport HelpScreen from '../Screens/HelpScreen';\nimport LogoutScreen from '../Screens/LogoutScreen';\n\nimport { DrawerParamList, EventParamList, HelpParamList, HomeParamList, LogoutParamList, NotificationParamList, ProfileParamList } from '../types';\nimport { View, Text, Button, Image, TouchableOpacity, Dimensions } from 'react-native';\n\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\nimport { Icon } from 'expo';\n\n\nconst Drawer = createDrawerNavigator<DrawerParamList>();\n\nexport default function DrawerNavigator() {\n  return (\n    <Drawer.Navigator>\n      \n      <Drawer.Screen\n        name=\"Home\"\n        component={HomeNavigator}\n      />\n      <Drawer.Screen\n        name=\"Profile\"\n        component={ProfileNavigator}\n      />\n      <Drawer.Screen\n        name=\"Notification\"\n        component={NotificationNavigator}\n      />\n      <Drawer.Screen\n        name=\"Event\"\n        component={EventNavigator}\n      />\n      <Drawer.Screen\n        name=\"Help\"\n        component={HelpNavigator}\n      />\n      <Drawer.Screen\n        name=\"Logout\"\n        component={LogoutNavigator}\n      />\n    </Drawer.Navigator>\n  );\n}\n\n\nconst HomeStack = createStackNavigator<HomeParamList>();\nfunction HomeNavigator(props) { // if there is an error on 'props' it is fine and working correctly\n  return (\n    \n    <HomeStack.Navigator>\n      <HomeStack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{ \n          headerTitle: 'Home',\n          headerLeft: () => (\n\t          <View>\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \n                <Image \n                  source = {require('../assets/images/menu-outline.png')} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get('window').width*0.06,\n                    height: Dimensions.get('window').height*0.06,\n                    marginLeft: 10,\n                    resizeMode: 'contain'\n                  }}\n                />\n\t          \t</TouchableOpacity>\n\t          </View>\n          ),\n          headerTitleStyle: {\n            textAlign: 'center'\n          }\n        }}\n      />\n    </HomeStack.Navigator>\n  )\n}\n\nconst ProfileStack = createStackNavigator<ProfileParamList>();\nfunction ProfileNavigator(props) { // if there is an error on 'props' it is fine and working correctly\n  return (\n    <ProfileStack.Navigator>\n      <ProfileStack.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{ \n          headerTitle: 'Profile',\n          headerLeft: () => (\n\t          <View>\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \n                <Image \n                  source = {require('../assets/images/menu-outline.png')} \n                  style={{\n                    flex: 1,\n                    width: Dimensions.get('window').width*0.06,\n                    height: Dimensions.get('window').height*0.06,\n                    marginLeft: 10,\n                    resizeMode: 'contain'\n                  }}\n                />\n\t          \t</TouchableOpacity>\n\t          </View>\n          ),\n          headerTitleStyle: {\n            textAlign: 'center'\n          }\n        }}\n      />\n    </ProfileStack.Navigator>\n  )\n}\n\nconst NotificationStack = createStackNavigator<NotificationParamList>();\nfunction NotificationNavigator(props) { // if there is an error on 'props' it is fine and working correctly\n  return (\n    \n    <NotificationStack.Navigator>\n      <NotificationStack.Screen\n        name=\"NotificationScreen\"\n        component={NotificationScreen}\n        options={{ \n          headerTitle: 'Notification',\n          headerLeft: () => (\n\t          <View>\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \n                <Image \n                  source = {require('../assets/images/menu-outline.png')} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get('window').width*0.06,\n                    height: Dimensions.get('window').height*0.06,\n                    marginLeft: 10,\n                    resizeMode: 'contain'\n                  }}\n                />\n\t          \t</TouchableOpacity>\n\t          </View>\n          ),\n          headerTitleStyle: {\n            textAlign: 'center'\n          }\n        }}\n      />\n    </NotificationStack.Navigator>\n  )\n}\n\nconst EventStack = createStackNavigator<EventParamList>();\nfunction EventNavigator(props) { // if there is an error on 'props' it is fine and working correctly\n  return (\n    \n    <EventStack.Navigator>\n      <EventStack.Screen\n        name=\"EventScreen\"\n        component={EventScreen}\n        options={{ \n          headerTitle: 'Event',\n          headerLeft: () => (\n\t          <View>\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \n                <Image \n                  source = {require('../assets/images/menu-outline.png')} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get('window').width*0.06,\n                    height: Dimensions.get('window').height*0.06,\n                    marginLeft: 10,\n                    resizeMode: 'contain'\n                  }}\n                />\n\t          \t</TouchableOpacity>\n\t          </View>\n          ),\n          headerTitleStyle: {\n            textAlign: 'center'\n          }\n        }}\n      />\n    </EventStack.Navigator>\n  )\n}\n\nconst HelpStack = createStackNavigator<HelpParamList>();\nfunction HelpNavigator(props) { // if there is an error on 'props' it is fine and working correctly\n  return (\n    \n    <HelpStack.Navigator>\n      <HelpStack.Screen\n        name=\"HelpScreen\"\n        component={HelpScreen}\n        options={{ \n          headerTitle: 'Help',\n          headerLeft: () => (\n\t          <View>\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \n                <Image \n                  source = {require('../assets/images/menu-outline.png')} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get('window').width*0.06,\n                    height: Dimensions.get('window').height*0.06,\n                    marginLeft: 10,\n                    resizeMode: 'contain'\n                  }}\n                />\n\t          \t</TouchableOpacity>\n\t          </View>\n          ),\n          headerTitleStyle: {\n            textAlign: 'center'\n          }\n        }}\n      />\n    </HelpStack.Navigator>\n  )\n}\nconst LogoutStack = createStackNavigator<LogoutParamList>();\nfunction LogoutNavigator(props) { // if there is an error on 'props' it is fine and working correctly\n  return (\n    \n    <LogoutStack.Navigator>\n      <LogoutStack.Screen\n        name=\"LogoutScreen\"\n        component={LogoutScreen}\n        options={{ \n          headerTitle: 'Logout',\n          headerLeft: () => (\n\t          <View>\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \n                <Image \n                  source = {require('../assets/images/menu-outline.png')} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get('window').width*0.06,\n                    height: Dimensions.get('window').height*0.06,\n                    marginLeft: 10,\n                    resizeMode: 'contain'\n                  }}\n                />\n\t          \t</TouchableOpacity>\n\t          </View>\n          ),\n          headerTitleStyle: {\n            textAlign: 'center'\n          }\n        }}\n      />\n    </LogoutStack.Navigator>\n  )\n}\n\n"]},"metadata":{},"sourceType":"module"}