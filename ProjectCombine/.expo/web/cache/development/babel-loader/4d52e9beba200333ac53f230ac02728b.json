{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["// import React, { Component } from \"react\";\r\n// import { Text, View } from \"react-native\";\r\n// import { connect } from \"react-redux\";\r\n// import { bindActionCreators } from \"redux\";\r\n// import { fetchUser } from \"../redux/actions/index.js\";\r\n\r\n// import { StatusBar } from 'expo-status-bar';\r\n// import { SafeAreaProvider } from 'react-native-safe-area-context';\r\n\r\n// import useCachedResources from '../hooks/useCachedResources';\r\n// import useColorScheme from '../hooks/useColorScheme';\r\n// import Navigation from '../navigation';\r\n\r\n// import { createStackNavigator } from '@react-navigation/stack';\r\n// import DrawerNavigator from '../navigation/DrawerNavigator';\r\n// import NotFoundScreen from '../Screens/NotFoundScreen';\r\n\r\n\r\n// const Stack = createStackNavigator();\r\n// export class main extends Component {\r\n//   componentDidMount() {\r\n//     this.props.fetchUser();\r\n//   }\r\n//   render() {\r\n//     const { currentUser } = this.props;\r\n\r\n//     // const isLoadingComplete = useCachedResources();\r\n//     // const colorScheme = useColorScheme();\r\n    \r\n//     console.log();\r\n//     if (currentUser == undefined) {\r\n//       return <View></View>;\r\n//     }\r\n//     return(\r\n//       // <View style={{ flex: 1, justifyContent: \"center\" }}>\r\n//       //   <Text>{currentUser.name} is logged in</Text>\r\n//       // </View>\r\n\r\n//       <NavigationContainer>\r\n//       <Stack.Navigator initialRouteName=\"root\">\r\n//         <Stack.Screen \r\n//           name=\"Root\" \r\n//           component={DrawerNavigator}\r\n//           options={{ headerShown: false }} \r\n//         />\r\n//       </Stack.Navigator>\r\n//       </NavigationContainer>\r\n\r\n//     //   <NavigationContainer\r\n//     //   linking={LinkingConfiguration}\r\n//     //   theme={colorScheme === 'dark' ? DarkTheme : DefaultTheme}>\r\n//     //   <RootNavigator />\r\n//     // </NavigationContainer>\r\n//     );\r\n//   }\r\n// }\r\n// const mapStateToProps = (store) => ({\r\n//   currentUser: store.userState.currentUser,\r\n// });\r\n\r\n// const mapDispatchProps = (dispatch) =>\r\n//   bindActionCreators({ fetchUser }, dispatch);\r\n\r\n// export default connect(mapStateToProps, mapDispatchProps)(main);\r\n"]},"metadata":{},"sourceType":"script"}