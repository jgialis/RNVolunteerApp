{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\eivan\\\\Desktop\\\\Spring 2021\\\\SE\\\\CSE120\\\\ProjectCombine\\\\navigation\\\\DrawerNavigator.tsx\";\nimport { createStackNavigator } from '@react-navigation/stack';\nimport { createDrawerNavigator } from '@react-navigation/drawer';\nimport * as React from 'react';\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport HelpScreen from \"../Screens/HelpScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nvar Drawer = createDrawerNavigator();\nexport default function DrawerNavigator() {\n  return React.createElement(Drawer.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notification\",\n    component: NotificationNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Event\",\n    component: EventNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Help\",\n    component: HelpNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Logout\",\n    component: LogoutNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }));\n}\nvar HomeStack = createStackNavigator();\n\nfunction HomeNavigator(props) {\n  var _this = this;\n\n  console.log(firebase.auth().currentUser);\n  return React.createElement(HomeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    options: {\n      headerTitle: 'Home',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction ProfileNavigator(props) {\n  var _this2 = this;\n\n  return React.createElement(ProfileStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      headerTitle: 'Profile',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar NotificationStack = createStackNavigator();\n\nfunction NotificationNavigator(props) {\n  var _this3 = this;\n\n  return React.createElement(NotificationStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 5\n    }\n  }, React.createElement(NotificationStack.Screen, {\n    name: \"NotificationScreen\",\n    component: NotificationScreen,\n    options: {\n      headerTitle: 'Notification',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar EventStack = createStackNavigator();\n\nfunction EventNavigator(props) {\n  var _this4 = this;\n\n  return React.createElement(EventStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 5\n    }\n  }, React.createElement(EventStack.Screen, {\n    name: \"EventScreen\",\n    component: EventScreen,\n    options: {\n      headerTitle: 'Event',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar HelpStack = createStackNavigator();\n\nfunction HelpNavigator(props) {\n  var _this5 = this;\n\n  return React.createElement(HelpStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 5\n    }\n  }, React.createElement(HelpStack.Screen, {\n    name: \"HelpScreen\",\n    component: HelpScreen,\n    options: {\n      headerTitle: 'Help',\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 12\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get('window').width * 0.06,\n            height: Dimensions.get('window').height * 0.06,\n            marginLeft: 10,\n            resizeMode: 'contain'\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: 'center'\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar LogoutStack = createStackNavigator();\n\nfunction LogoutNavigator(props) {\n  firebase.auth().signOut();\n  return React.createElement(LogoutStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 5\n    }\n  }, React.createElement(LogoutStack.Screen, {\n    name: \"LogoutScreen\",\n    component: LogoutScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["C:/Users/eivan/Desktop/Spring 2021/SE/CSE120/ProjectCombine/navigation/DrawerNavigator.tsx"],"names":["createStackNavigator","createDrawerNavigator","React","HomeScreen","ProfileScreen","NotificationScreen","EventScreen","HelpScreen","LogoutScreen","firebase","require","Drawer","DrawerNavigator","HomeNavigator","ProfileNavigator","NotificationNavigator","EventNavigator","HelpNavigator","LogoutNavigator","HomeStack","props","console","log","auth","currentUser","headerTitle","headerLeft","navigation","toggleDrawer","flex","width","Dimensions","get","height","marginLeft","resizeMode","headerTitleStyle","textAlign","ProfileStack","NotificationStack","EventStack","HelpStack","LogoutStack","signOut","headerShown"],"mappings":"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","sourcesContent":["import { createStackNavigator } from '@react-navigation/stack';\r\nimport { createDrawerNavigator } from '@react-navigation/drawer';\r\nimport { useNavigation, NavigationContainer, DrawerActions } from '@react-navigation/native';\r\nimport * as React from 'react';\r\n\r\nimport HomeScreen from '../Screens/HomeScreen';\r\nimport ProfileScreen from '../Screens/ProfileScreen';\r\nimport NotificationScreen from '../Screens/NotificationScreen';\r\nimport EventScreen from '../Screens/EventScreen';\r\nimport HelpScreen from '../Screens/HelpScreen';\r\nimport LogoutScreen from '../Screens/LogoutScreen';\r\nimport Landing from '../Screens/Landing';\r\n\r\nimport { DrawerParamList, EventParamList, HelpParamList, HomeParamList, LogoutParamList, NotificationParamList, ProfileParamList } from '../types';\r\nimport { View, Text, Button, Image, TouchableOpacity, Dimensions } from 'react-native';\r\n\r\nimport { Ionicons, MaterialCommunityIcons } from '@expo/vector-icons';\r\nimport { Icon } from 'expo';\r\n\r\nimport firebase from 'firebase'\r\nrequire('firebase/firestore')\r\n\r\nconst Drawer = createDrawerNavigator<DrawerParamList>();\r\n\r\nexport default function DrawerNavigator() {\r\n  return (\r\n    <Drawer.Navigator>\r\n      \r\n      <Drawer.Screen\r\n        name=\"Home\"\r\n        component={HomeNavigator}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Profile\"\r\n        component={ProfileNavigator}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Notification\"\r\n        component={NotificationNavigator}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Event\"\r\n        component={EventNavigator}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Help\"\r\n        component={HelpNavigator}\r\n      />\r\n      <Drawer.Screen\r\n        name=\"Logout\"\r\n        component={LogoutNavigator}\r\n      />\r\n    </Drawer.Navigator>\r\n  );\r\n}\r\n\r\n\r\nconst HomeStack = createStackNavigator<HomeParamList>();\r\nfunction HomeNavigator(props) { // if there is an error on 'props' it is fine and working correctly\r\n  console.log(firebase.auth().currentUser)\r\n  return (\r\n    \r\n    <HomeStack.Navigator>\r\n      <HomeStack.Screen\r\n        name=\"HomeScreen\"\r\n        component={HomeScreen}\r\n        options={{ \r\n          headerTitle: 'Home',\r\n          headerLeft: () => (\r\n\t          <View>\r\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \r\n                <Image \r\n                  source = {require('../assets/menu-outline.png')} //.svg is invisable in ios\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get('window').width*0.06,\r\n                    height: Dimensions.get('window').height*0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: 'contain'\r\n                  }}\r\n                />\r\n\t          \t</TouchableOpacity>\r\n\t          </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: 'center'\r\n          }\r\n        }}\r\n      />\r\n    </HomeStack.Navigator>\r\n  )\r\n}\r\n\r\nconst ProfileStack = createStackNavigator<ProfileParamList>();\r\nfunction ProfileNavigator(props) { // if there is an error on 'props' it is fine and working correctly\r\n  return (\r\n    <ProfileStack.Navigator>\r\n      <ProfileStack.Screen\r\n        name=\"ProfileScreen\"\r\n        component={ProfileScreen}\r\n        options={{ \r\n          headerTitle: 'Profile',\r\n          headerLeft: () => (\r\n\t          <View>\r\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \r\n                <Image \r\n                  source = {require('../assets/menu-outline.png')} \r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get('window').width*0.06,\r\n                    height: Dimensions.get('window').height*0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: 'contain'\r\n                  }}\r\n                />\r\n\t          \t</TouchableOpacity>\r\n\t          </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: 'center'\r\n          }\r\n        }}\r\n      />\r\n    </ProfileStack.Navigator>\r\n  )\r\n}\r\n\r\nconst NotificationStack = createStackNavigator<NotificationParamList>();\r\nfunction NotificationNavigator(props) { // if there is an error on 'props' it is fine and working correctly\r\n  return (\r\n    \r\n    <NotificationStack.Navigator>\r\n      <NotificationStack.Screen\r\n        name=\"NotificationScreen\"\r\n        component={NotificationScreen}\r\n        options={{ \r\n          headerTitle: 'Notification',\r\n          headerLeft: () => (\r\n\t          <View>\r\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \r\n                <Image \r\n                  source = {require('../assets/menu-outline.png')} //.svg is invisable in ios\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get('window').width*0.06,\r\n                    height: Dimensions.get('window').height*0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: 'contain'\r\n                  }}\r\n                />\r\n\t          \t</TouchableOpacity>\r\n\t          </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: 'center'\r\n          }\r\n        }}\r\n      />\r\n    </NotificationStack.Navigator>\r\n  )\r\n}\r\n\r\nconst EventStack = createStackNavigator<EventParamList>();\r\nfunction EventNavigator(props) { // if there is an error on 'props' it is fine and working correctly\r\n  return (\r\n    \r\n    <EventStack.Navigator>\r\n      <EventStack.Screen\r\n        name=\"EventScreen\"\r\n        component={EventScreen}\r\n        options={{ \r\n          headerTitle: 'Event',\r\n          headerLeft: () => (\r\n\t          <View>\r\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \r\n                <Image \r\n                  source = {require('../assets/menu-outline.png')} //.svg is invisable in ios\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get('window').width*0.06,\r\n                    height: Dimensions.get('window').height*0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: 'contain'\r\n                  }}\r\n                />\r\n\t          \t</TouchableOpacity>\r\n\t          </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: 'center'\r\n          }\r\n        }}\r\n      />\r\n    </EventStack.Navigator>\r\n  )\r\n}\r\n\r\nconst HelpStack = createStackNavigator<HelpParamList>();\r\nfunction HelpNavigator(props) { // if there is an error on 'props' it is fine and working correctly\r\n  return (\r\n    \r\n    <HelpStack.Navigator>\r\n      <HelpStack.Screen\r\n        name=\"HelpScreen\"\r\n        component={HelpScreen}\r\n        options={{ \r\n          headerTitle: 'Help',\r\n          headerLeft: () => (\r\n\t          <View>\r\n\t          \t<TouchableOpacity onPress={() => props.navigation.toggleDrawer() }> \r\n                <Image \r\n                  source = {require('../assets/menu-outline.png')} //.svg is invisable in ios\r\n                  style={{\r\n                    flex: 1,\r\n                    width: Dimensions.get('window').width*0.06,\r\n                    height: Dimensions.get('window').height*0.06,\r\n                    marginLeft: 10,\r\n                    resizeMode: 'contain'\r\n                  }}\r\n                />\r\n\t          \t</TouchableOpacity>\r\n\t          </View>\r\n          ),\r\n          headerTitleStyle: {\r\n            textAlign: 'center'\r\n          }\r\n        }}\r\n      />\r\n    </HelpStack.Navigator>\r\n  )\r\n}\r\nconst LogoutStack = createStackNavigator<LogoutParamList>();\r\nfunction LogoutNavigator(props) { // if there is an error on 'props' it is fine and working correctly\r\n  firebase.auth().signOut();\r\n  return (\r\n    \r\n    <LogoutStack.Navigator>\r\n      <LogoutStack.Screen\r\n        name=\"LogoutScreen\"\r\n        component={LogoutScreen}\r\n        options={{ headerShown: false}} \r\n      />\r\n    </LogoutStack.Navigator>\r\n  )\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}