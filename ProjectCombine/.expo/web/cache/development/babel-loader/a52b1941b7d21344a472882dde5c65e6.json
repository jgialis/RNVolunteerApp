{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\eivan\\\\Desktop\\\\Spring 2021\\\\SE\\\\CSE120\\\\ProjectCombine\\\\Screens\\\\ProfileScreen.tsx\";\nimport React, { useState, useEffect } from 'react';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Text } from \"../Components/Themed\";\nimport firebase from 'firebase';\n\nrequire('firebase/firestore');\n\nimport { connect } from 'react-redux';\n\nfunction ProfileScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  useEffect(function () {\n    var currentUser = props.currentUser,\n        posts = props.posts;\n\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\n      setUser(currentUser);\n    } else {\n      firebase.firestore().collection(\"users\").doc(props.route.params.uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          setUser(snapshot.data());\n        } else {\n          console.log('does not exist');\n        }\n      });\n    }\n  }, [props.route.params.uid, props.following]);\n  return React.createElement(ImageBackground, {\n    source: require(\"../assets/background.png\"),\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.containerInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, firebase.auth().currentUser.email));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1\n  },\n  containerInfo: {\n    marginTop: 20\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 'bold'\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: '80%'\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, null)(ProfileScreen);","map":{"version":3,"sources":["C:/Users/eivan/Desktop/Spring 2021/SE/CSE120/ProjectCombine/Screens/ProfileScreen.tsx"],"names":["React","useState","useEffect","Text","firebase","require","connect","ProfileScreen","props","user","setUser","currentUser","posts","route","params","uid","auth","firestore","collection","doc","get","then","snapshot","exists","data","console","log","following","styles","container","containerInfo","email","StyleSheet","create","flex","marginTop","title","fontSize","fontWeight","separator","marginVertical","height","width","mapStateToProps","store","userState"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAKA,SAASC,IAAT;AAEA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAGA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,kBACJP,QAAQ,CAAC,IAAD,CADJ;AAAA;AAAA,MACrBQ,IADqB;AAAA,MACfC,OADe;;AAG5BR,EAAAA,SAAS,CAAC,YAAM;AAAA,QACNS,WADM,GACiBH,KADjB,CACNG,WADM;AAAA,QACOC,KADP,GACiBJ,KADjB,CACOI,KADP;;AAGd,QAAIJ,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,GAAnB,KAA2BX,QAAQ,CAACY,IAAT,GAAgBL,WAAhB,CAA4BI,GAA3D,EAAgE;AAC5DL,MAAAA,OAAO,CAACC,WAAD,CAAP;AACH,KAFD,MAGK;AACDP,MAAAA,QAAQ,CAACa,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESX,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,GAF5B,EAGKK,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;AAChB,YAAIA,QAAQ,CAACC,MAAb,EAAqB;AACjBb,UAAAA,OAAO,CAACY,QAAQ,CAACE,IAAT,EAAD,CAAP;AACH,SAFD,MAGK;AACDC,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,OAXL;AAYG;AACV,GApBU,EAoBR,CAAClB,KAAK,CAACK,KAAN,CAAYC,MAAZ,CAAmBC,GAApB,EAAyBP,KAAK,CAACmB,SAA/B,CApBQ,CAAT;AAsBA,SACE,oBAAC,eAAD;AAAiB,IAAA,MAAM,EAAEtB,OAAO,4BAAhC;AAA8D,IAAA,KAAK,EAAEuB,MAAM,CAACC,SAA5E;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,aAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAoC1B,QAAQ,CAACY,IAAT,GAAgBL,WAAhB,CAA4BoB,KAAhE,CADF,CADF;AAWD;;AAED,IAAMH,MAAM,GAAGI,UAAU,CAACC,MAAX,CAAkB;AAC/BJ,EAAAA,SAAS,EAAE;AACTK,IAAAA,IAAI,EAAE;AADG,GADoB;AAM/BJ,EAAAA,aAAa,EAAE;AACbK,IAAAA,SAAS,EAAE;AADE,GANgB;AAS/BC,EAAAA,KAAK,EAAE;AACLC,IAAAA,QAAQ,EAAE,EADL;AAELC,IAAAA,UAAU,EAAE;AAFP,GATwB;AAa/BC,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,EADP;AAETC,IAAAA,MAAM,EAAE,CAFC;AAGTC,IAAAA,KAAK,EAAE;AAHE;AAboB,CAAlB,CAAf;;AAoBA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClCjC,IAAAA,WAAW,EAAEiC,KAAK,CAACC,SAAN,CAAgBlC;AADK,GAAZ;AAAA,CAAxB;;AAGA,eAAeL,OAAO,CAACqC,eAAD,EAAkB,IAAlB,CAAP,CAA+BpC,aAA/B,CAAf","sourcesContent":["// import * as React from 'react';\r\nimport React, { useState, useEffect } from 'react'\r\nimport { StyleSheet, Image, ImageBackground } from 'react-native';\r\nimport { fetchUser } from '../redux/actions/index'\r\n\r\nimport EditScreenInfo from '../Components/EditScreenInfo';\r\nimport { Text, View } from '../Components/Themed';\r\n\r\nimport firebase from 'firebase'\r\nrequire('firebase/firestore')\r\nimport { connect } from 'react-redux'\r\nimport { user } from '../redux/reducer/user';\r\n\r\nfunction ProfileScreen(props) {\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const { currentUser, posts } = props;\r\n\r\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\r\n        setUser(currentUser)\r\n    }\r\n    else {\r\n        firebase.firestore()\r\n            .collection(\"users\")\r\n            .doc(props.route.params.uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                if (snapshot.exists) {\r\n                    setUser(snapshot.data());\r\n                }\r\n                else {\r\n                    console.log('does not exist')\r\n                }\r\n            })\r\n          }\r\n}, [props.route.params.uid, props.following])\r\n\r\n  return (\r\n    <ImageBackground source={require(\"../assets/background.png\")} style={styles.container} >\r\n      <Text style={styles.containerInfo}>{firebase.auth().currentUser.email}</Text>\r\n    </ImageBackground>\r\n\r\n    // <View style={styles.container}>\r\n    //   <Text style={styles.title}>Profile</Text>\r\n    //   <View style={styles.separator} lightColor=\"#eee\" darkColor=\"rgba(255,255,255,0.1)\" />\r\n    //   {/* <EditScreenInfo path=\"/screens/ProfileScreen.tsx\" /> */}\r\n    // </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    // alignItems: 'center',\r\n    // justifyContent: 'center',\r\n  },\r\n  containerInfo: {\r\n    marginTop: 20\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: 'bold',\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: '80%',\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n})\r\nexport default connect(mapStateToProps, null)(ProfileScreen);"]},"metadata":{},"sourceType":"module"}