{"ast":null,"code":"var _jsxFileName = \"/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/navigation/DrawerNavigator.tsx\";\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport * as React from \"react\";\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport HelpScreen from \"../Screens/HelpScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nvar Drawer = createDrawerNavigator();\nexport default function DrawerNavigator() {\n  return React.createElement(Drawer.Navigator, {\n    drawerStyle: {\n      backgroundColor: \"#fbc956\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, React.createElement(Drawer.Screen, {\n    name: \"Home\",\n    component: HomeNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Profile\",\n    component: ProfileNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Notification\",\n    component: NotificationNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Event\",\n    component: EventNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Help\",\n    component: HelpNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), React.createElement(Drawer.Screen, {\n    name: \"Logout\",\n    component: LogoutNavigator,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }));\n}\nvar HomeStack = createStackNavigator();\n\nfunction HomeNavigator(props) {\n  var _this = this;\n\n  console.log(firebase.auth().currentUser);\n  return React.createElement(HomeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    options: {\n      drawerIcon: function drawerIcon(_ref) {\n        var focused = _ref.focused,\n            size = _ref.size;\n        return React.createElement(Ionicons, {\n          name: \"md-home\",\n          size: size,\n          color: focused ? \"#7cc\" : \"#ccc\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        });\n      },\n      headerTitle: \" \",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction ProfileNavigator(props) {\n  var _this2 = this;\n\n  return React.createElement(ProfileStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      headerTitle: \" \",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar NotificationStack = createStackNavigator();\n\nfunction NotificationNavigator(props) {\n  var _this3 = this;\n\n  return React.createElement(NotificationStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 5\n    }\n  }, React.createElement(NotificationStack.Screen, {\n    name: \"NotificationScreen\",\n    component: NotificationScreen,\n    options: {\n      headerTitle: \" \",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar EventStack = createStackNavigator();\n\nfunction EventNavigator(props) {\n  var _this4 = this;\n\n  return React.createElement(EventStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 5\n    }\n  }, React.createElement(EventStack.Screen, {\n    name: \"EventScreen\",\n    component: EventScreen,\n    options: {\n      headerTitle: \" \",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar HelpStack = createStackNavigator();\n\nfunction HelpNavigator(props) {\n  var _this5 = this;\n\n  return React.createElement(HelpStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 5\n    }\n  }, React.createElement(HelpStack.Screen, {\n    name: \"HelpScreen\",\n    component: HelpScreen,\n    options: {\n      headerTitle: \" \",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar LogoutStack = createStackNavigator();\n\nfunction LogoutNavigator(props) {\n  firebase.auth().signOut();\n  return React.createElement(LogoutStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 249,\n      columnNumber: 5\n    }\n  }, React.createElement(LogoutStack.Screen, {\n    name: \"LogoutScreen\",\n    component: LogoutScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 250,\n      columnNumber: 7\n    }\n  }));\n}","map":{"version":3,"sources":["/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/navigation/DrawerNavigator.tsx"],"names":["createStackNavigator","createDrawerNavigator","React","HomeScreen","ProfileScreen","NotificationScreen","EventScreen","HelpScreen","LogoutScreen","Ionicons","firebase","require","Drawer","DrawerNavigator","backgroundColor","HomeNavigator","ProfileNavigator","NotificationNavigator","EventNavigator","HelpNavigator","LogoutNavigator","HomeStack","props","console","log","auth","currentUser","drawerIcon","focused","size","headerTitle","headerLeft","navigation","toggleDrawer","flex","width","Dimensions","get","height","marginLeft","resizeMode","headerTitleStyle","textAlign","ProfileStack","NotificationStack","EventStack","HelpStack","headerStyle","LogoutStack","signOut","headerShown"],"mappings":"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","sourcesContent":["import { createStackNavigator, HeaderTitle } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport {\n  useNavigation,\n  NavigationContainer,\n  DrawerActions,\n} from \"@react-navigation/native\";\nimport * as React from \"react\";\n\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport HelpScreen from \"../Screens/HelpScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\nimport Landing from \"../Screens/Landing\";\n\nimport {\n  DrawerParamList,\n  EventParamList,\n  HelpParamList,\n  HomeParamList,\n  LogoutParamList,\n  NotificationParamList,\n  ProfileParamList,\n} from \"../types\";\nimport {\n  View,\n  Text,\n  Button,\n  Image,\n  TouchableOpacity,\n  Dimensions,\n} from \"react-native\";\n\nimport { Ionicons, MaterialCommunityIcons } from \"@expo/vector-icons\";\nimport { Icon } from \"expo\";\n\nimport firebase from \"firebase\";\nimport { Colors } from \"react-native/Libraries/NewAppScreen\";\nimport { setStatusBarBackgroundColor } from \"expo-status-bar\";\nrequire(\"firebase/firestore\");\n\nconst Drawer = createDrawerNavigator<DrawerParamList>();\n\nexport default function DrawerNavigator() {\n  return (\n    <Drawer.Navigator drawerStyle={{ backgroundColor: \"#fbc956\" }}>\n      <Drawer.Screen name=\"Home\" component={HomeNavigator} />\n      <Drawer.Screen name=\"Profile\" component={ProfileNavigator} />\n      <Drawer.Screen name=\"Notification\" component={NotificationNavigator} />\n      <Drawer.Screen name=\"Event\" component={EventNavigator} />\n      <Drawer.Screen name=\"Help\" component={HelpNavigator} />\n      <Drawer.Screen name=\"Logout\" component={LogoutNavigator} />\n    </Drawer.Navigator>\n  );\n}\n\nconst HomeStack = createStackNavigator<HomeParamList>();\nfunction HomeNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  console.log(firebase.auth().currentUser);\n  return (\n    <HomeStack.Navigator>\n      <HomeStack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{\n          drawerIcon: ({ focused, size }) => (\n            <Ionicons\n              name=\"md-home\"\n              size={size}\n              color={focused ? \"#7cc\" : \"#ccc\"}\n            />\n          ),\n          headerTitle: \" \",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </HomeStack.Navigator>\n  );\n}\n\nconst ProfileStack = createStackNavigator<ProfileParamList>();\nfunction ProfileNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <ProfileStack.Navigator>\n      <ProfileStack.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{\n          headerTitle: \" \",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")}\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </ProfileStack.Navigator>\n  );\n}\n\nconst NotificationStack = createStackNavigator<NotificationParamList>();\nfunction NotificationNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <NotificationStack.Navigator>\n      <NotificationStack.Screen\n        name=\"NotificationScreen\"\n        component={NotificationScreen}\n        options={{\n          headerTitle: \" \",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </NotificationStack.Navigator>\n  );\n}\n\nconst EventStack = createStackNavigator<EventParamList>();\nfunction EventNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <EventStack.Navigator>\n      <EventStack.Screen\n        name=\"EventScreen\"\n        component={EventScreen}\n        options={{\n          headerTitle: \" \",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </EventStack.Navigator>\n  );\n}\n\nconst HelpStack = createStackNavigator<HelpParamList>();\nfunction HelpNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <HelpStack.Navigator>\n      <HelpStack.Screen\n        name=\"HelpScreen\"\n        component={HelpScreen}\n        options={{\n          headerTitle: \" \",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </HelpStack.Navigator>\n  );\n}\nconst LogoutStack = createStackNavigator<LogoutParamList>();\nfunction LogoutNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  firebase.auth().signOut();\n  return (\n    <LogoutStack.Navigator>\n      <LogoutStack.Screen\n        name=\"LogoutScreen\"\n        component={LogoutScreen}\n        options={{ headerShown: false }}\n      />\n    </LogoutStack.Navigator>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}