{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"C:\\\\Users\\\\eivan\\\\Desktop\\\\Spring2021\\\\SE\\\\CSE120\\\\projectcombine\\\\Screens\\\\ProfileScreen.tsx\";\nimport React, { useState, useEffect } from \"react\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport { Text, View } from \"../Components/Themed\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nimport { connect } from \"react-redux\";\n\nfunction ProfileScreen(props) {\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setUser = _useState2[1];\n\n  console.log(user);\n  useEffect(function () {\n    var currentUser = props.currentUser,\n        posts = props.posts;\n\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\n      setUser(currentUser);\n    } else {\n      firebase.firestore().collection(\"users\").doc(props.route.params.uid).get().then(function (snapshot) {\n        if (snapshot.exists) {\n          setUser(snapshot.data());\n        } else {\n          console.log('does not exist');\n        }\n      });\n    }\n  }, [props.route.params.uid, props.following]);\n\n  if (user === null) {\n    return React.createElement(View, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 12\n      }\n    });\n  }\n\n  return React.createElement(ImageBackground, {\n    source: require(\"../assets/background2.png\"),\n    style: styles.container,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, React.createElement(Text, {\n    style: styles.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Email: \", user.email, \" \"), React.createElement(Text, {\n    style: styles.box,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }\n  }, \"Name: \", user.name, \" \"), React.createElement(Text, {\n    style: styles.descBox,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, \"Bio: \", user.bio, \" \"));\n}\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  },\n  containerInfo: {\n    marginTop: 10\n  },\n  appButtonContainer: {\n    backgroundColor: \"#ffb4b0\",\n    borderRadius: 10,\n    paddingVertical: 10,\n    width: 300,\n    marginTop: 80\n  },\n  appButtonText: {\n    fontSize: 20,\n    color: \"#ff5d55\",\n    fontWeight: \"800\",\n    alignSelf: \"center\"\n  },\n  box: {\n    backgroundColor: \"#ffb4b0\",\n    shadowOpacity: 0.25,\n    borderRadius: 10,\n    paddingVertical: 10,\n    width: 300,\n    height: 50,\n    marginTop: 40,\n    alignSelf: \"center\"\n  },\n  descBox: {\n    backgroundColor: \"#ffb4b0\",\n    shadowOpacity: 0.25,\n    borderRadius: 10,\n    paddingVertical: 10,\n    width: 300,\n    height: 250,\n    marginTop: 40,\n    alignSelf: \"center\"\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\"\n  },\n  separator: {\n    marginVertical: 30,\n    height: 1,\n    width: \"80%\"\n  }\n});\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, null)(ProfileScreen);","map":{"version":3,"sources":["C:/Users/eivan/Desktop/Spring2021/SE/CSE120/projectcombine/Screens/ProfileScreen.tsx"],"names":["React","useState","useEffect","Text","View","firebase","require","connect","ProfileScreen","props","user","setUser","console","log","currentUser","posts","route","params","uid","auth","firestore","collection","doc","get","then","snapshot","exists","data","following","styles","container","box","email","name","descBox","bio","StyleSheet","create","flex","alignItems","justifyContent","containerInfo","marginTop","appButtonContainer","backgroundColor","borderRadius","paddingVertical","width","appButtonText","fontSize","color","fontWeight","alignSelf","shadowOpacity","height","title","separator","marginVertical","mapStateToProps","store","userState"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;;;AAKA,SAASC,IAAT,EAAeC,IAAf;AAEA,OAAOC,QAAP,MAAqB,UAArB;;AACAC,OAAO,CAAC,oBAAD,CAAP;;AACA,SAASC,OAAT,QAAwB,aAAxB;;AAKA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAAA,kBACJR,QAAQ,CAAC,IAAD,CADJ;AAAA;AAAA,MACrBS,IADqB;AAAA,MACfC,OADe;;AAE5BC,EAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AAEAR,EAAAA,SAAS,CAAC,YAAM;AAAA,QACNY,WADM,GACiBL,KADjB,CACNK,WADM;AAAA,QACOC,KADP,GACiBN,KADjB,CACOM,KADP;;AAGd,QAAIN,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,GAAnB,KAA2Bb,QAAQ,CAACc,IAAT,GAAgBL,WAAhB,CAA4BI,GAA3D,EAAgE;AAC5DP,MAAAA,OAAO,CAACG,WAAD,CAAP;AACH,KAFD,MAGK;AACDT,MAAAA,QAAQ,CAACe,SAAT,GACKC,UADL,CACgB,OADhB,EAEKC,GAFL,CAESb,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,GAF5B,EAGKK,GAHL,GAIKC,IAJL,CAIU,UAACC,QAAD,EAAc;AAChB,YAAIA,QAAQ,CAACC,MAAb,EAAqB;AACjBf,UAAAA,OAAO,CAACc,QAAQ,CAACE,IAAT,EAAD,CAAP;AACH,SAFD,MAGK;AACDf,UAAAA,OAAO,CAACC,GAAR,CAAY,gBAAZ;AACH;AACJ,OAXL;AAYH;AACJ,GApBU,EAoBR,CAACJ,KAAK,CAACO,KAAN,CAAYC,MAAZ,CAAmBC,GAApB,EAAyBT,KAAK,CAACmB,SAA/B,CApBQ,CAAT;;AAsBF,MAAIlB,IAAI,KAAK,IAAb,EAAmB;AACf,WAAO,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAP;AACH;;AAEC,SACE,oBAAC,eAAD;AACE,IAAA,MAAM,EAAEJ,OAAO,6BADjB;AAEE,IAAA,KAAK,EAAEuB,MAAM,CAACC,SAFhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAWE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAED,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAiCrB,IAAI,CAACsB,KAAtC,MAXF,EAYE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEH,MAAM,CAACE,GAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAAgCrB,IAAI,CAACuB,IAArC,MAZF,EAcE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,OAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAmCxB,IAAI,CAACyB,GAAxC,MAdF,CADF;AAmBD;;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC/BP,EAAAA,SAAS,EAAE;AACTQ,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,UAAU,EAAE,QAFH;AAGTC,IAAAA,cAAc,EAAE;AAHP,GADoB;AAM/BC,EAAAA,aAAa,EAAE;AACbC,IAAAA,SAAS,EAAE;AADE,GANgB;AAS/BC,EAAAA,kBAAkB,EAAE;AAClBC,IAAAA,eAAe,EAAE,SADC;AAElBC,IAAAA,YAAY,EAAE,EAFI;AAGlBC,IAAAA,eAAe,EAAE,EAHC;AAIlBC,IAAAA,KAAK,EAAE,GAJW;AAKlBL,IAAAA,SAAS,EAAE;AALO,GATW;AAgB/BM,EAAAA,aAAa,EAAE;AACbC,IAAAA,QAAQ,EAAE,EADG;AAEbC,IAAAA,KAAK,EAAE,SAFM;AAGbC,IAAAA,UAAU,EAAE,KAHC;AAIbC,IAAAA,SAAS,EAAE;AAJE,GAhBgB;AAsB/BrB,EAAAA,GAAG,EAAE;AACHa,IAAAA,eAAe,EAAE,SADd;AAEHS,IAAAA,aAAa,EAAE,IAFZ;AAGHR,IAAAA,YAAY,EAAE,EAHX;AAIHC,IAAAA,eAAe,EAAE,EAJd;AAMHC,IAAAA,KAAK,EAAE,GANJ;AAOHO,IAAAA,MAAM,EAAE,EAPL;AAQHZ,IAAAA,SAAS,EAAE,EARR;AASHU,IAAAA,SAAS,EAAE;AATR,GAtB0B;AAiC/BlB,EAAAA,OAAO,EAAE;AACPU,IAAAA,eAAe,EAAE,SADV;AAEPS,IAAAA,aAAa,EAAE,IAFR;AAGPR,IAAAA,YAAY,EAAE,EAHP;AAIPC,IAAAA,eAAe,EAAE,EAJV;AAMPC,IAAAA,KAAK,EAAE,GANA;AAOPO,IAAAA,MAAM,EAAE,GAPD;AAQPZ,IAAAA,SAAS,EAAE,EARJ;AASPU,IAAAA,SAAS,EAAE;AATJ,GAjCsB;AA4C/BG,EAAAA,KAAK,EAAE;AACLN,IAAAA,QAAQ,EAAE,EADL;AAELE,IAAAA,UAAU,EAAE;AAFP,GA5CwB;AAgD/BK,EAAAA,SAAS,EAAE;AACTC,IAAAA,cAAc,EAAE,EADP;AAETH,IAAAA,MAAM,EAAE,CAFC;AAGTP,IAAAA,KAAK,EAAE;AAHE;AAhDoB,CAAlB,CAAf;;AAuDA,IAAMW,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD;AAAA,SAAY;AAClC7C,IAAAA,WAAW,EAAE6C,KAAK,CAACC,SAAN,CAAgB9C;AADK,GAAZ;AAAA,CAAxB;;AAGA,eAAeP,OAAO,CAACmD,eAAD,EAAkB,IAAlB,CAAP,CAA+BlD,aAA/B,CAAf","sourcesContent":["// import * as React from 'react';\r\nimport React, { useState, useEffect } from \"react\";\r\nimport { StyleSheet, Image, ImageBackground, Button, TouchableOpacity, TextInput } from \"react-native\";\r\nimport { fetchUser } from \"../redux/actions/index\";\r\n\r\nimport EditScreenInfo from \"../Components/EditScreenInfo\";\r\nimport { Text, View } from \"../Components/Themed\";\r\n\r\nimport firebase from \"firebase\";\r\nrequire(\"firebase/firestore\");\r\nimport { connect } from \"react-redux\";\r\nimport { user } from \"../redux/reducer/user\";\r\nimport EditScreen from \"./EditProfile\";\r\n\r\n\r\nfunction ProfileScreen(props) {\r\n  const [user, setUser] = useState(null);\r\n  console.log(user);\r\n\r\n  useEffect(() => {\r\n    const { currentUser, posts } = props;\r\n\r\n    if (props.route.params.uid === firebase.auth().currentUser.uid) {\r\n        setUser(currentUser)\r\n    }\r\n    else {\r\n        firebase.firestore()\r\n            .collection(\"users\")\r\n            .doc(props.route.params.uid)\r\n            .get()\r\n            .then((snapshot) => {\r\n                if (snapshot.exists) {\r\n                    setUser(snapshot.data());\r\n                }\r\n                else {\r\n                    console.log('does not exist')\r\n                }\r\n            })\r\n    }\r\n}, [props.route.params.uid, props.following])\r\n\r\nif (user === null) {\r\n    return <View />\r\n}\r\n\r\n  return (\r\n    <ImageBackground\r\n      source={require(\"../assets/background2.png\")}\r\n      style={styles.container}\r\n    >\r\n      {/* <TouchableOpacity\r\n          style={styles.appButtonContainer}\r\n          activeOpacity={0.5}\r\n          onPress={ updateProfile }\r\n        >\r\n          <Text style={styles.appButtonText}>Edit</Text>\r\n      </TouchableOpacity> */}\r\n      <Text style={styles.box}>Email: {user.email} </Text>\r\n      <Text style={styles.box}>Name: {user.name} </Text>\r\n      {/* <TextInput style={styles.box} placeholder = {\"Edit Name\"} onChangeText={(nameChange) => this.setState({ nameChange })}/> */}\r\n      <Text style={styles.descBox}>Bio: {user.bio} </Text>\r\n      {/* <TextInput style={styles.descBox} placeholder = {\"Edit Bio\"} onChangeText={(bioChange) => this.setState({ bioChange })}/> */}\r\n    </ImageBackground>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: {\r\n    flex: 1,\r\n    alignItems: \"center\",\r\n    justifyContent: \"center\",\r\n  },\r\n  containerInfo: {\r\n    marginTop: 10,\r\n  },\r\n  appButtonContainer: {\r\n    backgroundColor: \"#ffb4b0\",\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n    width: 300,\r\n    marginTop: 80,\r\n  },\r\n  appButtonText: {\r\n    fontSize: 20,\r\n    color: \"#ff5d55\",\r\n    fontWeight: \"800\",\r\n    alignSelf: \"center\",\r\n  },\r\n  box: {\r\n    backgroundColor: \"#ffb4b0\",\r\n    shadowOpacity: 0.25,\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n\r\n    width: 300,\r\n    height: 50,\r\n    marginTop: 40,\r\n    alignSelf: \"center\",\r\n  },\r\n  descBox: {\r\n    backgroundColor: \"#ffb4b0\",\r\n    shadowOpacity: 0.25,\r\n    borderRadius: 10,\r\n    paddingVertical: 10,\r\n\r\n    width: 300,\r\n    height: 250,\r\n    marginTop: 40,\r\n    alignSelf: \"center\",\r\n  },\r\n  title: {\r\n    fontSize: 20,\r\n    fontWeight: \"bold\",\r\n  },\r\n  separator: {\r\n    marginVertical: 30,\r\n    height: 1,\r\n    width: \"80%\",\r\n  },\r\n});\r\n\r\nconst mapStateToProps = (store) => ({\r\n  currentUser: store.userState.currentUser,\r\n});\r\nexport default connect(mapStateToProps, null)(ProfileScreen);\r\n"]},"metadata":{},"sourceType":"module"}