{"ast":null,"code":"var _jsxFileName = \"/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/navigation/DrawerNavigator.tsx\",\n    _this = this;\n\nimport { createStackNavigator } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\nimport * as React from \"react\";\nimport { connect } from \"react-redux\";\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport AboutScreen from \"../Screens/AboutScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\nimport EventDetails from \"../Screens/EventDetails\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nimport HomeData from \"../Components/HomeData\";\nHomeData();\nvar Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator(props) {\n  var currentUser = props.currentUser;\n  console.log({\n    currentUser: currentUser\n  });\n\n  if (currentUser.accountType === \"Volunteer\") {\n    return React.createElement(Drawer.Navigator, {\n      drawerContentOptions: {\n        activeTintColor: \"red\",\n        labelStyle: {\n          fontFamily: \"Verdana\",\n          color: \"#ff6623\"\n        }\n      },\n      drawerStyle: {\n        backgroundColor: \"#fbc956\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Home\",\n      component: HomeNavigator,\n      options: iconContainer.homeIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Profile\",\n      component: ProfileNavigator,\n      options: iconContainer.profileIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Notification\",\n      component: NotificationNavigator,\n      options: iconContainer.notificationIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"About\",\n      component: AboutNavigator,\n      options: iconContainer.AboutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Logout\",\n      component: LogoutNavigator,\n      options: iconContainer.logoutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }\n    }));\n  } else {\n    return React.createElement(Drawer.Navigator, {\n      drawerContentOptions: {\n        activeTintColor: \"red\",\n        labelStyle: {\n          fontFamily: \"Verdana\",\n          color: \"#ff6623\"\n        }\n      },\n      drawerStyle: {\n        backgroundColor: \"#fbc956\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 7\n      }\n    }, React.createElement(Drawer.Screen, {\n      name: \"Home\",\n      component: HomeNavigator,\n      options: iconContainer.homeIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Profile\",\n      component: ProfileNavigator,\n      options: iconContainer.profileIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Notification\",\n      component: NotificationNavigator,\n      options: iconContainer.notificationIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Event\",\n      component: EventNavigator,\n      options: iconContainer.eventIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"About\",\n      component: AboutNavigator,\n      options: iconContainer.AboutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }\n    }), React.createElement(Drawer.Screen, {\n      name: \"Logout\",\n      component: LogoutNavigator,\n      options: iconContainer.logoutIcon,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 9\n      }\n    }));\n  }\n}\n\nvar iconContainer = {\n  homeIcon: {\n    drawerIcon: function drawerIcon(_ref) {\n      var focused = _ref.focused,\n          size = _ref.size;\n      return React.createElement(Ionicons, {\n        name: \"md-home\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  profileIcon: {\n    drawerIcon: function drawerIcon(_ref2) {\n      var focused = _ref2.focused,\n          size = _ref2.size;\n      return React.createElement(Ionicons, {\n        name: \"person-sharp\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  notificationIcon: {\n    drawerIcon: function drawerIcon(_ref3) {\n      var focused = _ref3.focused,\n          size = _ref3.size;\n      return React.createElement(Ionicons, {\n        name: \"notifications\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  eventIcon: {\n    drawerIcon: function drawerIcon(_ref4) {\n      var focused = _ref4.focused,\n          size = _ref4.size;\n      return React.createElement(Ionicons, {\n        name: \"calendar\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  AboutIcon: {\n    drawerIcon: function drawerIcon(_ref5) {\n      var focused = _ref5.focused,\n          size = _ref5.size;\n      return React.createElement(Ionicons, {\n        name: \"information-circle-sharp\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 7\n        }\n      });\n    }\n  },\n  logoutIcon: {\n    drawerIcon: function drawerIcon(_ref6) {\n      var focused = _ref6.focused,\n          size = _ref6.size;\n      return React.createElement(Ionicons, {\n        name: \"log-out\",\n        size: size,\n        color: focused ? \"red\" : \"tomato\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 7\n        }\n      });\n    }\n  }\n};\nvar HomeStack = createStackNavigator();\n\nfunction HomeNavigator(props) {\n  var _this2 = this;\n\n  console.log(firebase.auth().currentUser);\n  return React.createElement(HomeStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, React.createElement(HomeStack.Screen, {\n    name: \"HomeScreen\",\n    component: HomeScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Home\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 30\n          }\n        });\n      },\n      headerTitleStyle: {\n        textAlign: \"center\",\n        fontSize: 25\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }\n  }), React.createElement(HomeStack.Screen, {\n    name: \"EventDetails\",\n    component: EventDetails,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitleStyle: {\n        textAlign: \"center\",\n        fontSize: 25\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this2,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 30\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar ProfileStack = createStackNavigator();\n\nfunction ProfileNavigator(props) {\n  var _this3 = this;\n\n  return React.createElement(ProfileStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, React.createElement(ProfileStack.Screen, {\n    name: \"ProfileScreen\",\n    component: ProfileScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Profile\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 245,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 247,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this3,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 260,\n            columnNumber: 30\n          }\n        });\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar NotificationStack = createStackNavigator();\n\nfunction NotificationNavigator(props) {\n  var _this4 = this;\n\n  return React.createElement(NotificationStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 5\n    }\n  }, React.createElement(NotificationStack.Screen, {\n    name: \"NotificationScreen\",\n    component: NotificationScreen,\n    options: {\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerTitle: \"Notifications\",\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 286,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 287,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this4,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 300,\n            columnNumber: 30\n          }\n        });\n      },\n      headerTitleStyle: {\n        textAlign: \"center\",\n        fontSize: 24\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar EventStack = createStackNavigator();\n\nfunction EventNavigator(props) {\n  var _this5 = this;\n\n  return React.createElement(EventStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 5\n    }\n  }, React.createElement(EventStack.Screen, {\n    name: \"EventScreen\",\n    component: EventScreen,\n    options: {\n      headerTitle: \"Event\",\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 326,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 327,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this5,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 30\n          }\n        });\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 316,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar AboutStack = createStackNavigator();\n\nfunction AboutNavigator(props) {\n  var _this6 = this;\n\n  return React.createElement(AboutStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 355,\n      columnNumber: 5\n    }\n  }, React.createElement(AboutStack.Screen, {\n    name: \"AboutScreen\",\n    component: AboutScreen,\n    options: {\n      headerTitle: \"About\",\n      headerTintColor: \"blue\",\n      headerStyle: {\n        backgroundColor: \"#8ebaff\"\n      },\n      headerLeft: function headerLeft() {\n        return React.createElement(View, {\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 366,\n            columnNumber: 13\n          }\n        }, React.createElement(TouchableOpacity, {\n          onPress: function onPress() {\n            return props.navigation.toggleDrawer();\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 367,\n            columnNumber: 15\n          }\n        }, React.createElement(Image, {\n          source: require(\"../assets/menu-outline.png\"),\n          style: {\n            flex: 1,\n            width: Dimensions.get(\"window\").width * 0.06,\n            height: Dimensions.get(\"window\").height * 0.06,\n            marginLeft: 10,\n            resizeMode: \"contain\"\n          },\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 368,\n            columnNumber: 17\n          }\n        })));\n      },\n      headerTitleStyle: {\n        textAlign: \"center\"\n      },\n      headerRight: function headerRight() {\n        return React.createElement(View, {\n          __self: _this6,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 384,\n            columnNumber: 30\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar LogoutStack = createStackNavigator();\n\nfunction LogoutNavigator(props) {\n  firebase.auth().signOut();\n  return React.createElement(LogoutStack.Navigator, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 395,\n      columnNumber: 5\n    }\n  }, React.createElement(LogoutStack.Screen, {\n    name: \"LogoutScreen\",\n    component: LogoutScreen,\n    options: {\n      headerShown: false\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 7\n    }\n  }));\n}\n\nvar mapStateToProps = function mapStateToProps(store) {\n  return {\n    currentUser: store.userState.currentUser\n  };\n};\n\nexport default connect(mapStateToProps, null)(DrawerNavigator);","map":{"version":3,"sources":["/Users/JoshGialis/Desktop/CSE LOCAL 120/CSE120/ProjectCombine/navigation/DrawerNavigator.tsx"],"names":["createStackNavigator","createDrawerNavigator","React","connect","HomeScreen","ProfileScreen","NotificationScreen","EventScreen","AboutScreen","LogoutScreen","EventDetails","Ionicons","firebase","require","HomeData","Drawer","DrawerNavigator","props","currentUser","console","log","accountType","activeTintColor","labelStyle","fontFamily","color","backgroundColor","HomeNavigator","iconContainer","homeIcon","ProfileNavigator","profileIcon","NotificationNavigator","notificationIcon","AboutNavigator","AboutIcon","LogoutNavigator","logoutIcon","EventNavigator","eventIcon","drawerIcon","focused","size","HomeStack","auth","headerTintColor","headerStyle","headerTitle","headerLeft","navigation","toggleDrawer","flex","width","Dimensions","get","height","marginLeft","resizeMode","headerRight","headerTitleStyle","textAlign","fontSize","ProfileStack","NotificationStack","EventStack","AboutStack","LogoutStack","signOut","headerShown","mapStateToProps","store","userState"],"mappings":"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","sourcesContent":["import { createStackNavigator, HeaderTitle } from \"@react-navigation/stack\";\nimport { createDrawerNavigator } from \"@react-navigation/drawer\";\n\nimport * as React from \"react\";\n\nimport { connect } from \"react-redux\";\n\nimport HomeScreen from \"../Screens/HomeScreen\";\nimport ProfileScreen from \"../Screens/ProfileScreen\";\nimport NotificationScreen from \"../Screens/NotificationScreen\";\nimport EventScreen from \"../Screens/EventScreen\";\nimport AboutScreen from \"../Screens/AboutScreen\";\nimport LogoutScreen from \"../Screens/LogoutScreen\";\nimport EventDetails from \"../Screens/EventDetails\";\n\nimport {\n  DrawerParamList,\n  EventParamList,\n  AboutParamList,\n  HomeParamList,\n  LogoutParamList,\n  NotificationParamList,\n  ProfileParamList,\n} from \"../types\";\nimport { View, Image, TouchableOpacity, Dimensions } from \"react-native\";\n\nimport { Ionicons } from \"@expo/vector-icons\";\n\nimport firebase from \"firebase\";\n\nrequire(\"firebase/firestore\");\n\nimport HomeData from \"../Components/HomeData\";\nHomeData();\n\nconst Drawer = createDrawerNavigator<DrawerParamList>();\n// const Drawer = createDrawerNavigator();\n\nfunction DrawerNavigator(props) {\n  const { currentUser } = props;\n  console.log({ currentUser });\n\n  if (currentUser.accountType === \"Volunteer\") {\n    return (\n      <Drawer.Navigator\n        drawerContentOptions={{\n          activeTintColor: \"red\",\n          labelStyle: { fontFamily: \"Verdana\", color: \"#ff6623\" },\n        }}\n        drawerStyle={{ backgroundColor: \"#fbc956\" }}\n      >\n        <Drawer.Screen\n          name=\"Home\"\n          component={HomeNavigator}\n          options={iconContainer.homeIcon}\n        />\n        <Drawer.Screen\n          name=\"Profile\"\n          component={ProfileNavigator}\n          options={iconContainer.profileIcon}\n        />\n        <Drawer.Screen\n          name=\"Notification\"\n          component={NotificationNavigator}\n          options={iconContainer.notificationIcon}\n        />\n        <Drawer.Screen\n          name=\"About\"\n          component={AboutNavigator}\n          options={iconContainer.AboutIcon}\n        />\n        <Drawer.Screen\n          name=\"Logout\"\n          component={LogoutNavigator}\n          options={iconContainer.logoutIcon}\n        />\n      </Drawer.Navigator>\n    );\n  } else {\n    return (\n      <Drawer.Navigator\n        drawerContentOptions={{\n          activeTintColor: \"red\",\n          labelStyle: { fontFamily: \"Verdana\", color: \"#ff6623\" },\n        }}\n        drawerStyle={{ backgroundColor: \"#fbc956\" }}\n      >\n        <Drawer.Screen\n          name=\"Home\"\n          component={HomeNavigator}\n          options={iconContainer.homeIcon}\n        />\n        <Drawer.Screen\n          name=\"Profile\"\n          component={ProfileNavigator}\n          options={iconContainer.profileIcon}\n        />\n        <Drawer.Screen\n          name=\"Notification\"\n          component={NotificationNavigator}\n          options={iconContainer.notificationIcon}\n        />\n        <Drawer.Screen\n          name=\"Event\"\n          component={EventNavigator}\n          options={iconContainer.eventIcon}\n        />\n        <Drawer.Screen\n          name=\"About\"\n          component={AboutNavigator}\n          options={iconContainer.AboutIcon}\n        />\n        <Drawer.Screen\n          name=\"Logout\"\n          component={LogoutNavigator}\n          options={iconContainer.logoutIcon}\n        />\n      </Drawer.Navigator>\n    );\n  }\n}\n\nconst iconContainer = {\n  homeIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons name=\"md-home\" size={size} color={focused ? \"red\" : \"tomato\"} />\n    ),\n  },\n  profileIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons\n        name=\"person-sharp\"\n        size={size}\n        color={focused ? \"red\" : \"tomato\"}\n      />\n    ),\n  },\n  notificationIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons\n        name=\"notifications\"\n        size={size}\n        color={focused ? \"red\" : \"tomato\"}\n      />\n    ),\n  },\n  eventIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons\n        name=\"calendar\"\n        size={size}\n        color={focused ? \"red\" : \"tomato\"}\n      />\n    ),\n  },\n  AboutIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons\n        name=\"information-circle-sharp\"\n        size={size}\n        color={focused ? \"red\" : \"tomato\"}\n      />\n    ),\n  },\n  logoutIcon: {\n    drawerIcon: ({ focused, size }) => (\n      <Ionicons name=\"log-out\" size={size} color={focused ? \"red\" : \"tomato\"} />\n    ),\n  },\n};\n\nconst HomeStack = createStackNavigator<HomeParamList>();\nfunction HomeNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  console.log(firebase.auth().currentUser);\n  return (\n    <HomeStack.Navigator>\n      <HomeStack.Screen\n        name=\"HomeScreen\"\n        component={HomeScreen}\n        options={{\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerTitle: \"Home\",\n\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerRight: () => <View></View>,\n          headerTitleStyle: {\n            textAlign: \"center\",\n            fontSize: 25,\n          },\n        }}\n      />\n      <HomeStack.Screen\n        name=\"EventDetails\"\n        component={EventDetails}\n        options={{\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerTitleStyle: {\n            textAlign: \"center\",\n            fontSize: 25,\n          },\n          headerRight: () => <View></View>,\n        }}\n      />\n    </HomeStack.Navigator>\n  );\n}\n\nconst ProfileStack = createStackNavigator<ProfileParamList>();\nfunction ProfileNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <ProfileStack.Navigator>\n      <ProfileStack.Screen\n        name=\"ProfileScreen\"\n        component={ProfileScreen}\n        options={{\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerTitle: \"Profile\",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")}\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerRight: () => <View></View>,\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </ProfileStack.Navigator>\n  );\n}\n\nconst NotificationStack = createStackNavigator<NotificationParamList>();\nfunction NotificationNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <NotificationStack.Navigator>\n      <NotificationStack.Screen\n        name=\"NotificationScreen\"\n        component={NotificationScreen}\n        options={{\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerTitle: \"Notifications\",\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerRight: () => <View></View>,\n          headerTitleStyle: {\n            textAlign: \"center\",\n            fontSize: 24,\n          },\n        }}\n      />\n    </NotificationStack.Navigator>\n  );\n}\n\nconst EventStack = createStackNavigator<EventParamList>();\nfunction EventNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <EventStack.Navigator>\n      <EventStack.Screen\n        name=\"EventScreen\"\n        component={EventScreen}\n        options={{\n          headerTitle: \"Event\",\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerRight: () => <View></View>,\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n        }}\n      />\n    </EventStack.Navigator>\n  );\n}\n\nconst AboutStack = createStackNavigator<AboutParamList>();\nfunction AboutNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  return (\n    <AboutStack.Navigator>\n      <AboutStack.Screen\n        name=\"AboutScreen\"\n        component={AboutScreen}\n        options={{\n          headerTitle: \"About\",\n          headerTintColor: \"blue\",\n          headerStyle: {\n            backgroundColor: \"#8ebaff\",\n          },\n          headerLeft: () => (\n            <View>\n              <TouchableOpacity onPress={() => props.navigation.toggleDrawer()}>\n                <Image\n                  source={require(\"../assets/menu-outline.png\")} //.svg is invisable in ios\n                  style={{\n                    flex: 1,\n                    width: Dimensions.get(\"window\").width * 0.06,\n                    height: Dimensions.get(\"window\").height * 0.06,\n                    marginLeft: 10,\n                    resizeMode: \"contain\",\n                  }}\n                />\n              </TouchableOpacity>\n            </View>\n          ),\n          headerTitleStyle: {\n            textAlign: \"center\",\n          },\n          headerRight: () => <View></View>,\n        }}\n      />\n    </AboutStack.Navigator>\n  );\n}\nconst LogoutStack = createStackNavigator<LogoutParamList>();\nfunction LogoutNavigator(props) {\n  // if there is an error on 'props' it is fine and working correctly\n  firebase.auth().signOut();\n  return (\n    <LogoutStack.Navigator>\n      <LogoutStack.Screen\n        name=\"LogoutScreen\"\n        component={LogoutScreen}\n        options={{ headerShown: false }}\n      />\n    </LogoutStack.Navigator>\n  );\n}\n\nconst mapStateToProps = (store) => ({\n  currentUser: store.userState.currentUser,\n});\nexport default connect(mapStateToProps, null)(DrawerNavigator);\n"]},"metadata":{},"sourceType":"module"}